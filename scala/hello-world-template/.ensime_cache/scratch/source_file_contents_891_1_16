import math._
import util.Random
import util.Sorting._

object Main extends App {
  println("Hello, World!")

  def something(n: Int) = {
    val x = new Array[Int](n)
    for(i <- 0 until x.length) {
      x(i) = Random.nextInt(n)
    }
    x
  }

  def otherthing(a: Array[Int]): Array[Int] = {
    for(i <- a) yield {
      val j = a.indexOf(i)
      if(j == a.length - 1){
        i
      } else if(j % 2 == 0) {
        a(j + 1)
      } else {
        a(j - 1)
      }
    }
  }

  def newthing(a: Array[Int]): Array[Int] = {
    val p = a.groupBy(_ >= 0)
    p(true) ++ p(false)
  }
}

class Counter {
  private var value: BigInt = Int.MaxValue;

  def increment() = { value += 1}
  def current() = value
}


class BankAccount(private var balance: BigDecimal) {

  def deposit(amount: BigDecimal) { balance += amount}
  def withdraw(amount: BigDecimal) { balance -= amount}

  def current = balance
}

class Time(private val epoch: Int) {

  def this(hours: Int, minutes: Int) {
    this(hours * 60 + minutes)
  }

  def before(other: Time) = {
    epoch < other.epoch
  }
}


class Person {
  var age: Int

  def this(age: Int) = {
    this()
    if(age > 0) {
      this.age = age
    } else
  }
}
